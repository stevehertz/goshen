.page-hero{background:#0077c8 50% no-repeat;background-size:cover;-webkit-clip-path:polygon(0 0,100% 0,100% 100%,0 calc(100% - 32px));clip-path:polygon(0 0,100% 0,100% 100%,0 calc(100% - 32px));color:#fff;margin-bottom:1rem;overflow:hidden;position:relative}.page-hero .inner{align-items:center;display:flex;justify-content:center;padding:8rem 0;position:relative;text-align:center}.page-hero.has-text-align-center .inner{margin-left:auto;margin-right:auto}.page-hero.has-text-align-right .inner{margin-left:auto}.page-hero .content{margin:0 auto;max-width:30rem;width:100%}.page-hero .content h1{font-family:Le Gourmet Script;font-size:3rem;line-height:.9;margin-bottom:.5rem}.page-hero .content h1 strong{display:block;font-family:Block Berthold;font-size:125%;margin-bottom:-.5rem;text-transform:uppercase}.page-hero .content h1 em{font-family:Le Gourmet;font-style:normal}.page-hero .content p{-webkit-clip-path:polygon(0 0,100% 10%,98% 100%,2% 100%);clip-path:polygon(0 0,100% 10%,98% 100%,2% 100%);font-size:1.125rem;margin:0 auto;max-width:36rem;padding:1rem}.page-hero .anchor-link{bottom:1rem;color:inherit;display:block;font-family:Block Berthold;font-size:2.25rem;left:50%;line-height:1.25;position:absolute;text-align:center;text-decoration:none;transform:translateX(-50%);transition:box-shadow .15s ease-in-out;width:12rem;z-index:2}.page-hero .anchor-link:after{background:url(../../../assets/icons/arrow-down.svg) 50% no-repeat;content:"";display:block;height:29px;margin:.5rem auto;width:35px}.page-hero .anchor-link:focus{box-shadow:0 0 0 .25rem hsla(0,0%,100%,.5)}@media (min-width:576px){.page-hero .inner{min-height:50vw}.page-hero .content h1{font-size:calc(1.575rem + 3.9vw)}}@media (min-width:576px) and (min-width:1200px){.page-hero .content h1{font-size:4.5rem}}@media (min-width:576px){.page-hero .content h1 strong{font-size:133%}.page-hero .anchor-link{font-size:3rem}}@media (min-width:768px){.page-hero{-webkit-clip-path:polygon(0 0,100% 0,100% 100%,0 calc(100% - 64px));clip-path:polygon(0 0,100% 0,100% 100%,0 calc(100% - 64px))}.page-hero .inner{max-width:50%;padding-bottom:10rem}.page-hero .anchor-link{bottom:3rem}}@media (min-width:1400px){.page-hero .inner{min-height:45rem}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
